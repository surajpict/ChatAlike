[{"C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\index.js":"1","C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\App.js":"2","C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\components\\MainForm.jsx":"3","C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\components\\ChatRoom.jsx":"4"},{"size":171,"mtime":1663579272530,"results":"5","hashOfConfig":"6"},{"size":585,"mtime":1663582058553,"results":"7","hashOfConfig":"6"},{"size":2591,"mtime":1665820654616,"results":"8","hashOfConfig":"6"},{"size":4913,"mtime":1665821141477,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hjqwpu",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\index.js",[],[],"C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\App.js",[],[],"C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\components\\MainForm.jsx",[],[],[],"C:\\Users\\soman\\Desktop\\ChatAlike\\FE\\chat\\src\\components\\ChatRoom.jsx",["24"],[],"import { useEffect, useRef, useState } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport Moment from 'react-moment'\r\nimport { io } from \"socket.io-client\"\r\n\r\nconst ChatRoom = () => {\r\n\r\n    const location = useLocation()\r\n    const msgBoxRef = useRef()\r\n\r\n    const [ data, setData ] = useState({})\r\n    const [ msg, setMsg ] = useState(\"\")\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ allMessages, setMessages ] = useState([])\r\n    const [ socket, setSocket ] = useState()\r\n\r\n    useEffect(() => {\r\n        const socket = io(\"http://localhost:9000\")\r\n        setSocket(socket)\r\n\r\n        socket.on(\"connect\", () => {\r\n            console.log(\"socket Connected\")\r\n            socket.emit(\"joinRoom\", location.state.room)\r\n        })        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(socket){\r\n            socket.on(\"getLatestMessage\", (newMessage) => {\r\n                console.log(allMessages)\r\n                console.log(newMessage)\r\n                setMessages([ ...allMessages,  newMessage ])\r\n                msgBoxRef.current.scrollIntoView({behavior: \"smooth\"})\r\n                setMsg(\"\")\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [socket, allMessages])    \r\n\r\n    useEffect(() => {\r\n        setData(location.state)\r\n    }, [location])\r\n    \r\n    const handleChange = e => setMsg(e.target.value)\r\n    const handleEnter = e => e.keyCode===13 ? onSubmit() : \"\"\r\n    const onSubmit = () => {\r\n        if(msg){\r\n            setLoading(true)\r\n            const newMessage = { time:new Date(), msg, name: data.name }\r\n            socket.emit(\"newMessage\", {newMessage, room: data.room})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"py-4 m-5 w-50 shadow bg-light mycolour border rounded container\" >\r\n                <div className=\"text-center px-3 mb-4 text-capitalize\">\r\n                    <h1 className=\"text-dark mb-4\">{data?.room} Chat Room</h1>\r\n                </div>\r\n                <div className=\"bg-light border rounded p-3 mb-4\" style={{height: \"450px\", overflowY:\"scroll\"}}>\r\n                    {\r\n                        allMessages.map(msg => {\r\n                            return data.name === msg.name\r\n                            ?\r\n                            <div className=\"row justify-content-end \">\r\n                                <div className=\"d-flex flex-column align-items-start m-2 shadow p-2 bg-white border rounded w-auto\">\r\n                                    <div>\r\n                                        <strong className=\"m-1\">{msg.name}</strong>\r\n                                        <small className=\"text-muted m-1\"><Moment fromNow>{msg.time}</Moment></small>\r\n                                    </div>\r\n                                    <strong className=\"m-1\">{msg.msg}</strong>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"row justify-content-start\">\r\n                                <div className=\"d-flex flex-column m-2 p-2 shadow bg-white border rounded w-auto\">\r\n                                    <div>\r\n                                        <strong className=\"m-1\">{msg.name}</strong>\r\n                                        <small className=\"text-mmuted m-1\"><Moment fromNow>{msg.time}</Moment></small>\r\n                                    </div>\r\n                                    <strong className=\"m-1\">{msg.msg}</strong>\r\n                                </div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                    <div ref={msgBoxRef} ></div>\r\n                </div>\r\n                <div className=\"form-group d-flex\">\r\n                    <input type=\"text\" className=\"form-control bg-light\" name=\"message\" onKeyDown={handleEnter} placeholder=\"Type your message\" value={msg} onChange={handleChange} />\r\n                    <button type=\"button\" className=\"btn btn-warning mx-2\" disabled={loading} onClick={onSubmit}>\r\n                        {\r\n                            loading\r\n                            ?\r\n                            <div class=\"spinner-border spinner-border-sm text-primary\"></div>                            \r\n                            :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-send\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z\"></path>\r\n                            </svg>\r\n                        }\r\n                    </button>   \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatRoom",{"ruleId":"25","severity":1,"message":"26","line":25,"column":8,"nodeType":"27","endLine":25,"endColumn":10,"suggestions":"28"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.room'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [location.state.room]",{"range":"32","text":"33"},[789,791],"[location.state.room]"]